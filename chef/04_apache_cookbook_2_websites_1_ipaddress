We have Workstation , Hosted chef server and bootstraped a node. (refer to 01_motd_cookbook)

Add log_level :info in /etc/chef/client.rb on the node to get the messages of whats happening on the node when chef-client runs;

On workstation,
----1st---- 
1. knife cookbook create apache
vim cookbooks/apache/recipes/default.rb
TXT START
#assume node is centos
package "httpd"  do  --> package resource allow us to install package by default; Assume target node is centOS
	action :install
end
service  "httpd" do   
	action [:enable,:start]
end
TXT END

2. knife cookbook upload apache   ---> upload whole cookbook to server

3. knife node run_list add  node1 'recipe[apache]'    ---> adds default.rb to runlist for node1

On node, run chef-client  --> service httpd service -- it is enabled

----2nd----
1. knife cookbook create security
vim cookbooks/security/recipes/default.rb
TXT start
file '/etc/chef/validation.pem' do  --> apply to file on node
	action :delete
do
TXT END

2. It needs to be first recipie on run list. How to add before apache recipe.
knife node run_list add node1 -b "recipe[apache]" "recipe[security]"

knife node show nodename --> see the run list of node

Now, we have run list for node1  : security::default.rb and then apache::default.rb, but secutity cookbook is not yet uploaded on the server
if chef-client run we will enconter error 412 : 'Precondition Failed"

3. knife cookbook upload security  ---> if we have any syntax error in recipe, during upload it will show us

######################################################################################
Manual process: Virtual hosting Apache - Hosting multiple websites on 1 physical server
--------------------------------------------------------------------------------------
1. we have centOS machine

2. yum install httpd ----> is apache2 in ubuntu

3. CentOS comes with iptable and SElinux enabled by default; we want to disable then
or we can set up iptables and selinux to accept incoming connections on port 80
vi /etc/sysconfig/selinux
SELINUX=disabled

service iptables stop  --> stop iptable for this boot instance
chkconfig iptables off --> turn off for future boot instance

4. reboot
5. vim /etc/httpd/conf/httpd.conf
NameVirtaulHost *:80  ---> Activate virtual host
Listen 80
Listen 81
<VirtualHost *:80>
	Servername testa.com
	ServerAlias www.testa.com
	DocumentRoot "/var/www"   ---> it by default points to "/var/www/html"
</VirtualHost>
<VirtualHost *:80>
	Servername testb.com
	ServerAlias www.testb.com
	DocumentRoot "/var/www"   ---> it by default points to "/var/www/html"
</VirtualHost>
<VirtualHost *:81>
	Servername port81.com
	ServerAlias www.port81.com
	DocumentRoot "/var/www"   ---> it by default points to "/var/www/html"
</VirtualHost>

service httpd restart
6. cp -R testa /var/www ; cp -R testb /var/www ; cp -R port81 /var/www
Folder for sites contain html and css files for website
In browser try www.testa.com; www.testb.com ; www.port81.com:81

7. /etc/hosts
ipadd of machine 	testa.com
ipadd of machine 	testb.com
ipadd of machine	port81.com

8. testa.com testb.com in browser




######################################################################################
We have Workstation , Hosted chef server and bootstraped a node.
Apache virtual host configuration

On workstation,
MVC -> Attribute is M(define data), recipe as C(process data and pass to template), template as V 

1. vim cookbooks/apache/attributes/default.rb
ATTRIBUTE TO DEFINE SITES THAT WE ADD TO WEBSERVER
we can define attributes inside cookbook, environments or roles. Attribute allow us to define information about something.We want to use it define info about node.
we define data in attribute file  --> we can define attributes base on node properties such as it it debian , suse system
understand attribute precedence(overwrite default attribute if needed) - default is lower level
Attribute file is loaded when chef-client is run, it is loaded as part of node object.
TXT START
default["apache"]["sites"]["node1"] = { "port" => 80, "domain"=> "node1.vm.vagrant"}  -----> where this attrubute is (apache cookbook) , what are we defining (sites), site name = properites of site
TXT END

2. vim cookbooks/apache/recipes/default.rb
TXT START
#assume node is centos
package "httpd"  do  --> package resource allow us to install package by default
	action :install
end
node["apache"]["sites"].each do |sitename, data|  --> get info from attribute file
	# where is documentroot?
	document_root = "/contents/sites/#{sitename}"

	directory document_root do  --> create this directory
		mode '0755'
		recursive true --> mkdir -p
	end

	template '/etc/httpd/conf.d/#{sitename}.conf' do  --> location on node where this template should end up
		source "vhost.erb"  --> take this file
		mode "0644"
		variables(	---> pass variable to template file
			:document_root => document_root,
			:port => data["port"],
			:domain => data["domain"]
		)
		notifies :restart, "service[httpd]"
	end
end
service  "httpd" do   
	action [:enable,:start]
end
TXT END

3. cookbooks/apache/templates/default/vhost.erb
TXT START
<% if @port == 80 -%>   ---> supress line break after ruby evaluation
	NameVirtualHost *:80
<% end -%>

<VirtualHost *:<%= @port %> >
	ServerName <%= @domain %>
	DocumentRoot <%= @document_root %>
<Directory>
	Options FollowSymLinks
	AllowOverride None
</Directory>
<Directory <%=  @document_root %> >
	Options Indexes FollowSymLinks MultiViews
	AllowOverride None
	Order allow,deny
	allow from all
</Directory>
</VirtualHost>	
TXT END

4. knife cookbook upload apache

5. chef-client

##############################################
Automate the creation of index.html file

1. vim cookbooks/apache/attributes/default.rb


